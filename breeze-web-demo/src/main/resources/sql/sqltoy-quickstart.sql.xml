<?xml version="1.0" encoding="utf-8"?>
<sqltoy xmlns="http://www.sagframe.com/schema/sqltoy"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.sagframe.com/schema/sqltoy http://www.sagframe.com/schema/sqltoy/sqltoy.xsd">
    <!--id 命名建议遵循：moduleName +functionName 模式，避免不同模块之间重复-->
    <sql id="sqltoy_sql_specs">
        <!-- filters 用来对参与查询或执行的参数值进行转化处理 -->
        <filters>
            <!--参数等于某个值则将参数值设置为nu11-->
            <eq params="organType" value="-1"/>
            <!--将参数条件值转换为日期格式，format：日期格式、increment-time 加减时问，increment-unit默认为days-->
            <to-date params="" format="yyyy-MM-dd" increment-time="1" increment-unit="days"/>
            <to-number params="" data-type="decimal"/>
            <!-- 在参数的左边加号,sgItoy默认规则是：参数里面有。符号不做处理，没有:符号则两边加。-->
            <l-like params="staffName"/>
            <!--在参数的石边边加-->
            <r-like params="staffName"/>
            <!-- 通过缓存将名称用类似1ike模式匹配出对应的编码作为条件进行精准查询-->
            <cache-arg param="" cache-name="" cache-type="" alias-name=""/>
            <!--首要参数，比如页面上精准输入了订单编码，此时除特定条件外其他条件全部设置为nu11不参与查询-->
            <primary param="id" excludes="organIds"/>
            <!--将数组转化成in的参数条件并增加单引号-->
            <to-in-arg params=""/>
            <!--空白转为nu11，一般无需配置，默认就是所有空白自动转为null-->
            <blank params="*" excludes="staffName"/>
            <!--参数值在某个区间则转为nu11-->
            <between params="" start-value="0" end-value="999999" excludes=""/>
            <!--将前端传过来的字符串切割成数组-->
            <split params="args" data-type="string" split-sign=","/>
            <!--参数小于等于某个值时转为null-->
            <lte params="" value=""/>
            <lt params="" value=""/>
            <gte params="" value=""/>
            <gt params="" value=""/>
            <!--字符替换,默认根据正则表达进行全部替换，is-first为true时只替换首个-->
            <replace params="" regex="" value="" is-first="false"/>
            <!--排他性参数，当某个参数是xxx值时,将其他参数设置为特定值-->
            <exclusive param="" set-params="" compare-type="eq" compare-values=""/>
        </filters>
        <!--缓存翻译，可以对例如：A,B 这种拼连的进行翻泽(要指定分隔符号后最后拼装符号 split-regex=”,"link-sign=", ”)。uncached-template 是针对未能匹配时显示的补充，$(value] 表示显示key值，可以key=[$4value}未定义这种写法-->
        <translate cache="dict" columns="" cache-type="" cache-indexs="1" uncached-template=""/>
        <!--安全掩码：电话\姓名\地址\卡号 最简单用法：<secure-mask columns="" type="tel" /> -->
        <secure-mask columns="" type="name" head-size="3" tail-size="4" mask-code="*" mask-rate="50"/>
        <!-- 分库策略-->
        <sharding-datasource strategy=""/>
        <!-- 分表策略-->
        <sharding-table tables="" strategy="" params=""/>
        <!--分页优化，缓存相同查询条件的分页总记录数量，alive-max：表示相同的一个sq1保留100个不同条件查询。alive-seconds :相同的查询条件分页总记录数保留时长（单位秒）-->
        <page-optimize alive-max="100" alive-seconds="90"/>
        <!-- 日期格式化 -->
        <date-format columns="" format="yyyy-MM-dd HH:mm:ss"/>
        <!--数字格式化，包括：#,###.00(可自定义)、capital（数字转中文大写）、captial-rmb(大写金额)-->
        <number-format columns="" format="capital-rmb"/>
        <value>
            <![CDATA[
        -- sq1 中是可以直接写注释的
        select t1.*,t2.ORGAN NAME from
            @fast(select * from sys staff info t
                where #[t.sexType=:sexType]
                        #[and t.JOIN DATE>:beginDate]
                        #[and t. STAFF NAME like :staffName]
                        -是否虚拟员工@if()做逻辑判断
                        #Qif(: isVirtual==true||:isVirtual==0) and t.IS VIRTUAL=11) t1, sys organ info t2
                where t1.ORGAN ID=t2.ORGAN ID
        ]]>
        </value>
        <!--count-sql（只针对分页查询有效,sqltoy分页针对计算count的sql进行了智能处理，一般不需要额外定义 countsql,除极为苛刻的性能优化，sqltoy提供了极度优化的口子）-->
        <count-sql></count-sql>
        <!--汇总和求平均-->
        <summary sum-columns="" average-radix-sizes="" reverse="false" sum-site="top">
            <global label-column="" sum-label=""/>
            <group group-column="" label-column="" sum-label=""/>
        </summary>
        <!--列与列之间环比计算-->
        <cols-chain-relative group-size="3" relative-indexs="1,2" start-column="1" format="#.00%"/>
        <!--拼接某列，mysq1中等同于group_concat\oracle 中的hMSYS.bIMLCONCAT功能-->
        <link columns="" sign=","/>
        <!--行转列(跟unpivot互斥)-->
        <pivot group-columns="" category-columns="" start-column="" end-column=""/>
        <!--列转行(跟unpivot互斥)-->
        <unpivot columns-to-rows="1:xxxx,2:xxxx" new-columns-labels=""/>
    </sql>
    <sql id="test">
        <value>
            select * from user
        </value>
    </sql>
</sqltoy>